import { OutputTargetCustom } from '@stencil/core/internal';
import { writeFileSync } from 'fs';
import { join } from 'path';

export function componentConfig(): OutputTargetCustom {
  return {
    type: 'custom',
    name: 'component-option',
    execType: 'run', // the new property to specify that target has to be executed on every change
    async generator(config, compilerCtx: any, buildCtx, docs) {
      const lines: string[] = [];
      lines.push(
        '/* eslint-disable */',
        '/* tslint:disable */',
        '/**',
        ' * This is an autogenerated file created by the Cheese-grinder stencil Plugin.',
        ' * It contains typing information for all configurable components that exist in this project.',
        ' */',
      );

      lines.push('export interface ComponentOptions {');
      buildCtx.components
        .filter(component => (
          component.properties
            .some(prop => (
              prop.docs.tags.some(tag => tag.name === 'config')
            ))
        ))
        .forEach(component => {
          lines.push(`  "${component.tagName}"?: {`);

          component.properties
            .filter(prop => prop.docs.tags.some(tag => tag.name === 'config'))
            .forEach(prop => lines.push(`    ${prop.name}?: ${prop.complexType.resolved};`));
          lines.push('  }');
        });

      lines.push('}');

      config.srcDir
      writeFileSync(join(
        config.srcDir!, 'component-config.d.ts'
      ), lines.join('\n'));
    },
  };
}
